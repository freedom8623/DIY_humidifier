C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Driver\oled.c LARGE WARNINGLEVEL(1) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Dr
                    -iver;.\User) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          
   2          #include "oled.h"
   3          #include "oledfont.h"    
   4          #include "intrins.h"  
   5          //OLED的显存
   6          //存放格式如下.
   7          //[0]0 1 2 3 ... 127  
   8          //[1]0 1 2 3 ... 127  
   9          //[2]0 1 2 3 ... 127  
  10          //[3]0 1 2 3 ... 127  
  11          //[4]0 1 2 3 ... 127  
  12          //[5]0 1 2 3 ... 127  
  13          //[6]0 1 2 3 ... 127  
  14          //[7]0 1 2 3 ... 127         
  15          void delay_ms(unsigned int ms)
  16          {                         
  17   1        unsigned char i, j;
  18   1      while(ms--)
  19   1      {
  20   2        _nop_();
  21   2        i = 32;
  22   2        j = 40;
  23   2        do
  24   2        {
  25   3          while (--j);
  26   3        } while (--i);
  27   2      }
  28   1      }
  29          
  30          //反显函数
  31          void OLED_ColorTurn(u8 i)
  32          {
  33   1        if(i==0)
  34   1          {
  35   2            OLED_WR_Byte(0xA6,OLED_CMD);//正常显示
  36   2          }
  37   1        if(i==1)
  38   1          {
  39   2            OLED_WR_Byte(0xA7,OLED_CMD);//反色显示
  40   2          }
  41   1      }
  42          
  43          //屏幕旋转180度
  44          void OLED_DisplayTurn(u8 i)
  45          {
  46   1        if(i==0)
  47   1          {
  48   2            OLED_WR_Byte(0xC8,OLED_CMD);//正常显示
  49   2            OLED_WR_Byte(0xA1,OLED_CMD);
  50   2          }
  51   1        if(i==1)
  52   1          {
  53   2            OLED_WR_Byte(0xC0,OLED_CMD);//反转显示
  54   2            OLED_WR_Byte(0xA0,OLED_CMD);
C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 2   

  55   2          }
  56   1      }
  57          
  58          //延时
  59          void IIC_delay(void)
  60          {
  61   1        u8 t=1;
  62   1        while(t--);
  63   1      }
  64          
  65          //起始信号
  66          void I2C_Start(void)
  67          {
  68   1        OLED_SDA_Set();
  69   1        OLED_SCL_Set();
  70   1        IIC_delay();
  71   1        OLED_SDA_Clr();
  72   1        IIC_delay();
  73   1        OLED_SCL_Clr();
  74   1         
  75   1      }
  76          
  77          //结束信号
  78          void I2C_Stop(void)
  79          {
  80   1        OLED_SDA_Clr();
  81   1        OLED_SCL_Set();
  82   1        IIC_delay();
  83   1        OLED_SDA_Set();
  84   1      }
  85          
  86          //等待信号响应
  87          void I2C_WaitAck(void) //测数据信号的电平
  88          {
  89   1        OLED_SDA_Set();
  90   1        IIC_delay();
  91   1        OLED_SCL_Set();
  92   1        IIC_delay();
  93   1        OLED_SCL_Clr();
  94   1        IIC_delay();
  95   1      }
  96          
  97          //写入一个字节
  98          void Send_Byte(u8 dat)
  99          {
 100   1        u8 i;
 101   1        for(i=0;i<8;i++)
 102   1        {
 103   2          OLED_SCL_Clr();//将时钟信号设置为低电平
 104   2          if(dat&0x80)//将dat的8位从最高位依次写入
 105   2          {
 106   3            OLED_SDA_Set();
 107   3          }
 108   2          else
 109   2          {
 110   3            OLED_SDA_Clr();
 111   3          }
 112   2          IIC_delay();
 113   2          OLED_SCL_Set();
 114   2          IIC_delay();
 115   2          OLED_SCL_Clr();
 116   2          dat<<=1;
C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          //发送一个字节
 121          //向SSD1306写入一个字节。
 122          //mode:数据/命令标志 0,表示命令;1,表示数据;
 123          void OLED_WR_Byte(u8 dat,u8 mode)
 124          {
 125   1        I2C_Start();
 126   1        Send_Byte(0x78);
 127   1        I2C_WaitAck();
 128   1        if(mode){Send_Byte(0x40);}
 129   1        else{Send_Byte(0x00);}
 130   1        I2C_WaitAck();
 131   1        Send_Byte(dat);
 132   1        I2C_WaitAck();
 133   1        I2C_Stop();
 134   1      }
 135          
 136          //坐标设置
 137          
 138          void OLED_Set_Pos(u8 x, u8 y) 
 139          { 
 140   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
 141   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 142   1        OLED_WR_Byte((x&0x0f),OLED_CMD);
 143   1      }       
 144          //开启OLED显示    
 145          void OLED_Display_On(void)
 146          {
 147   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 148   1        OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 149   1        OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 150   1      }
 151          //关闭OLED显示     
 152          void OLED_Display_Off(void)
 153          {
 154   1        OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 155   1        OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 156   1        OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 157   1      }            
 158          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 159          void OLED_Clear(void)  
 160          {  
 161   1        u8 i,n;       
 162   1        for(i=0;i<8;i++)  
 163   1        {  
 164   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 165   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 166   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 167   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 168   2        } //更新显示
 169   1      }
 170          
 171          //在指定位置显示一个字符,包括部分字符
 172          //x:0~127
 173          //y:0~63         
 174          //sizey:选择字体 6x8  8x16
 175          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 sizey)
 176          {       
 177   1        u8 c=0,sizex=sizey/2;
 178   1        u16 i=0,size1;
C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 4   

 179   1        if(sizey==8)size1=6;
 180   1        else size1=(sizey/8+((sizey%8)?1:0))*(sizey/2);
 181   1        c=chr-' ';//得到偏移后的值
 182   1        OLED_Set_Pos(x,y);
 183   1        for(i=0;i<size1;i++)
 184   1        {
 185   2          if(i%sizex==0&&sizey!=8) OLED_Set_Pos(x,y++);
 186   2          if(sizey==8) OLED_WR_Byte(asc2_0806[c][i],OLED_DATA);//6X8字号
 187   2          else if(sizey==16) OLED_WR_Byte(asc2_1608[c][i],OLED_DATA);//8x16字号
 188   2      //    else if(sizey==xx) OLED_WR_Byte(asc2_xxxx[c][i],OLED_DATA);//用户添加字号
 189   2          else return;
 190   2        }
 191   1      }
 192          //m^n函数
 193          unsigned intoled_pow(u8 m,u8 n)
 194          {
 195   1        unsigned int result=1;   
 196   1        while(n--)result*=m;    
 197   1        return result;
 198   1      }         
 199          //显示数字
 200          //x,y :起点坐标
 201          //num:要显示的数字
 202          //len :数字的位数
 203          //sizey:字体大小      
 204          void OLED_ShowNum(u8 x,u8 y,unsigned int num,u8 len,u8 sizey)
 205          {           
 206   1        u8 t,temp,m=0;
 207   1        u8 enshow=0;
 208   1        if(sizey==8)m=2;
 209   1        for(t=0;t<len;t++)
 210   1        {
 211   2          temp=(num/oled_pow(10,len-t-1))%10;
 212   2          if(enshow==0&&t<(len-1))
 213   2          {
 214   3            if(temp==0)
 215   3            {
 216   4              OLED_ShowChar(x+(sizey/2+m)*t,y,' ',sizey);
 217   4              continue;
 218   4            }else enshow=1;
 219   3          }
 220   2          OLED_ShowChar(x+(sizey/2+m)*t,y,temp+'0',sizey);
 221   2        }
 222   1      }
 223          //显示一个字符号串
 224          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 sizey)
 225          {
 226   1        u8 j=0;
 227   1        while (chr[j]!='\0')
 228   1        {   
 229   2          OLED_ShowChar(x,y,chr[j++],sizey);
 230   2          if(sizey==8)x+=6;
 231   2          else x+=sizey/2;
 232   2        }
 233   1      }
 234          //显示汉字
 235          void OLED_ShowChinese(u8 x,u8 y,u8 no,u8 sizey)
 236          {
 237   1        u16 i,size1=(sizey/8+((sizey%8)?1:0))*sizey;
 238   1        for(i=0;i<size1;i++)
 239   1        {
 240   2          if(i%sizey==0) OLED_Set_Pos(x,y++);
C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 5   

 241   2          if(sizey==16) OLED_WR_Byte(Hzk[no][i],OLED_DATA);//16x16字号
 242   2      //    else if(sizey==xx) OLED_WR_Byte(xxx[c][i],OLED_DATA);//用户添加字号
 243   2          else return;
 244   2        }       
 245   1      }
 246          
 247          
 248          //显示图片
 249          //x,y显示坐标
 250          //sizex,sizey,图片长宽
 251          //BMP：要显示的图片
 252          void OLED_DrawBMP(u8 x,u8 y,u8 sizex, u8 sizey,u8 BMP[])
 253          {   
 254   1        u16 j=0;
 255   1        u8 i,m;
 256   1        sizey=sizey/8+((sizey%8)?1:0);
 257   1        for(i=0;i<sizey;i++)
 258   1        {
 259   2          OLED_Set_Pos(x,i+y);
 260   2          for(m=0;m<sizex;m++)
 261   2          {      
 262   3            OLED_WR_Byte(BMP[j++],OLED_DATA);       
 263   3          }
 264   2        }
 265   1      } 
 266          
 267          
 268          
 269          //初始化            
 270          void OLED_Init(void)
 271          {
 272   1        OLED_RES_Clr();
 273   1        delay_ms(200);
 274   1        OLED_RES_Set();
 275   1        
 276   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 277   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 278   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 279   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 280   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 281   1        OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 282   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 283   1        OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 284   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 285   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 286   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 287   1        OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 288   1        OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 289   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 290   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 291   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 292   1        OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 293   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 294   1        OLED_WR_Byte(0x12,OLED_CMD);
 295   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 296   1        OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 297   1        OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 298   1        OLED_WR_Byte(0x02,OLED_CMD);//
 299   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 300   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 301   1        OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 302   1        OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7) 
C51 COMPILER V9.60.7.0   OLED                                                              12/16/2023 22:47:26 PAGE 6   

 303   1        OLED_Clear();
 304   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 305   1      }
 306          
 307          
 308          
 309          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1495    ----
   CONSTANT SIZE    =   2648    ----
   XDATA SIZE       =   ----      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
